name: ci

on:
  push:
    branches-ignore:
      - 'master'

  pull_request:

jobs:
  buildx:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2

      -
        name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${{ github.event.repository.full_name }}

          TAGS="localhost:5000/${DOCKER_IMAGE}:${{ github.sha }}"

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=build_date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          version: latest

      -
        name: Cache Docker layers
        uses: actions/cache@v2
        env:
          cache-name: buildx
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/386,linux/ppc64le,linux/s390x
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          build-args: |
            BUILD_DATE=${{ steps.prep.outputs.build_date }}
            REVISION=${{ github.sha }}

      -
        name: Inspect
        run: |
          docker buildx imagetools inspect localhost:5000/${{ steps.prep.outputs.docker_image }}:${{ github.sha }}

      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      -
        name: Cache hit
        run: echo ${{ steps.cache.outputs.cache-hit }}

      -
        name: Dump context
        if: always()
        uses: crazy-max/ghaction-dump-context@v1